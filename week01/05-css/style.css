/* SANITY CHECK */

/* universal selector */
* {
    box-sizing: border-box;
}

body {
    background-color: LightSeaGreen;
}

/* elements selector (tagname) */
header {
    background-color: darkred;
    position: relative;
}

/* descendent selector */
/* selects all img elements that are descendants of .header */
header img {
    height: 40px;
}

section a {
    font-weight: bold;
    color: lavender;
}

/* direct children selector */
section > a {
    color: green;
}

/* comma seperated selctors */
section ul,
section ol {
    color: wheat;
    font-size: 24px;
}

header img:nth-child(2) {
    position: absolute;
    right: 0;
    top: 0;
}

/* class selector */
.hero {
    height: 500px;
    background-color: blue;
}

/* id selector */
#marketing {
    height: 800px;
    background-color: violet;
    text-align: center;
    position: relative;
}

/*
when you have 2 conflicting rules,
the one with an id selector will always win against rules with only class selectors
*/
.blue {
    background-color: blue;
}

/* general sibling selector */
ul ~ p {
    color: red;
}

/* direct sibling selector */
/*
when you have to conflicting css rules (of same specifity),
targeting the same element (in that case the first p),
the last rule wins.
*/
ul + p {
    color: tan;
    font-size: 20px;
}

footer {
    height: 100px;
}

/* combine selector */
footer.yellow {
    background-color: yellow;
}

a:after {
    content: "↗⚠️";
}

section {
    /*transition: background-color 1s;*/
    transition: all 1s;
}

section:hover {
    background-color: MediumSpringGreen;
}

.strawberry {
    height: 400px;
    transition: all 1s;

    /*
    with position absolute + transform translate,
    you can center elements dynamically horizontal & vertical
    */
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);

    animation: slide 3s infinite;

    /*animation-name: slide;
    animation-duration: 3s;
    animation-fill-mode: backwards;*/
}

.strawberry:hover {
    transform: scale(2) skew(15deg, 15deg);
}

@keyframes slide {
    0% {
        transform: translateX(0);
    }
    50% {
        transform: translateX(900px) rotate(270deg);
    }
    100% {
        transform: translateX(0);
    }
}
